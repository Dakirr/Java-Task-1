1. Описание функционала.
Взаимодействие пользователя и программы осуществляется через объект типа Console. 
Допустимы следующие команды:
 • add <имя животного или название вещи> - добавляет соответствующую вещь в базу
 • get animals - возвращает список животных
 • get things - возвращает список вещей
 • get pets - возвращает список животных для контактного зоопарка
 • get food - возвращает необходимое количество еды
 • get all - возвращает список всего

2. SOLID
 • S - Классы разделены по назначениям. Работы с данными и взаимодействия с пользователем разделены (Zoo и Console).
 • O - Использовано наследование и интерфейсы. К любому из полей, являющихся приватными и использующемуся наследником, есть getter и setter, позволяющий их менять.
 • L - Выполнен. Методы родителей в потомках не переопределяются. Пример использования полиморфизма - get_petable_list() в Zoo.
 • I - Интерфейса два, и их использование обоснованно задачей.
 • D - Зависимостей объектов напрямую нет. Часть объектов используют ассоциацию с другим объектом, часть объектов наследуется от абстрактных классов или интерфейсов.

 3. Прочее

 У меня нет контейнера, но есть Unit-тесты.